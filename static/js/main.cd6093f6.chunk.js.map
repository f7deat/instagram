{"version":3,"sources":["post.js","firebase.js","modal.js","App.js","serviceWorker.js","index.js"],"names":["Post","user","image","caption","className","src","alt","aria-label","fill","height","viewBox","width","d","clipRule","fillRule","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Modal","open","onClick","type","placeholder","App","useState","posts","setPosts","setOpen","useEffect","collection","onSnapshot","snapshot","docs","map","doc","id","post","data","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kRA0BeA,MAvBf,YAAuC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QACxB,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBACX,yBAAKC,IAAKH,EAAOI,IAAI,GAAGF,UAAU,iBAEtC,yBAAKA,UAAU,sBACVH,IAGT,gCACI,yBAAKI,IAAKH,EAAOI,IAAI,GAAGF,UAAU,iBAEtC,yBAAKA,UAAU,eACX,yBAAKG,aAAW,WAAQH,UAAU,QAAQI,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,MAAK,0BAAMC,EAAE,yfAC5G,yBAAKL,aAAW,oBAAYH,UAAU,QAAQI,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,MAAK,0BAAME,SAAS,UAAUD,EAAE,ySAAySE,SAAS,aACrb,yBAAKP,aAAW,gCAAmBH,UAAU,QAAQI,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,MAAK,0BAAMC,EAAE,6NAE3H,yBAAKR,UAAU,gBAAgBD,K,gBCTrCY,EAXcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YACVV,IAASW,OACNX,IAASY,UCWVC,MAxBf,YAAmC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAMnB,OACI,yBAAK3B,UAAU,gBACX,yBAAKA,UAAW0B,EAAO,oBAAsB,gBACzC,yBAAK1B,UAAU,eAAf,SAGA,yBAAKA,UAAU,cACX,2BAAO4B,KAAK,OAAO5B,UAAU,qBAAqB6B,YAAY,aAC9D,2BAAOD,KAAK,WAAW5B,UAAU,eAAe6B,YAAY,cAEhE,yBAAK7B,UAAU,2BACX,4BAAQA,UAAU,kBAAkB2B,QAAS,kBAAMA,GAAQ,KAA3D,UACA,4BAAQ3B,UAAU,kBAAkB2B,QAAS,cAA7C,aCiCLG,MA/Cf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGWF,oBAAS,GAHpB,mBAGNL,EAHM,KAGAQ,EAHA,KAcb,OATAC,qBAAU,WACRxB,EAAGyB,WAAW,SAASC,YAAW,SAAAC,GAChCL,EAASK,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CACjCC,GAAID,EAAIC,GACRC,KAAMF,EAAIG,iBAGb,IAGD,yBAAK5C,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKC,IAAI,wFAAwFD,UAAU,mBAAmBE,IAAI,UAEpI,yBAAKF,UAAU,WACb,4BAAQA,UAAU,OAChB,yBAAKG,aAAW,OAAOH,UAAU,QAAQI,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,MAAK,0BAAMC,EAAE,yUAE7G,4BAAQR,UAAU,MAAM2B,QAAS,kBAAMO,GAAQ,KAC/C,yBAAK/B,aAAW,sBAAgBH,UAAU,GAAGI,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,MAAK,0BAAMC,EAAE,yiBAMvH,yBAAKR,UAAU,0BACb,yBAAKA,UAAU,SAEbgC,EAAMQ,KAAI,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACR,kBAAC,EAAD,CAAME,IAAKH,EAAI7C,KAAM8C,EAAK9C,KAAMC,MAAO6C,EAAK7C,MAAOC,QAAS4C,EAAK5C,eAKvE,kBAAC,EAAD,CAAO2B,KAAMA,EAAMC,QAASO,MCpCdY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cd6093f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/post.css';\r\n\r\nfunction Post({user, image, caption}) {\r\n    return (\r\n        <div className=\"shadow post\">\r\n            <div className=\"post-user\">\r\n                <div className=\"post-user-avatar\">\r\n                    <img src={image} alt=\"\" className=\"user-avatar\"/>\r\n                </div>\r\n                <div className=\"post-user-username\">\r\n                    {user}\r\n                </div>\r\n            </div>\r\n            <figure>\r\n                <img src={image} alt=\"\" className=\"post__image\"/>\r\n            </figure>\r\n            <div className=\"post-action\">\r\n                <svg aria-label=\"Thích\" className=\"mr-1r\" fill=\"#262626\" height=\"24\" viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M34.6 6.1c5.7 0 10.4 5.2 10.4 11.5 0 6.8-5.9 11-11.5 16S25 41.3 24 41.9c-1.1-.7-4.7-4-9.5-8.3-5.7-5-11.5-9.2-11.5-16C3 11.3 7.7 6.1 13.4 6.1c4.2 0 6.5 2 8.1 4.3 1.9 2.6 2.2 3.9 2.5 3.9.3 0 .6-1.3 2.5-3.9 1.6-2.3 3.9-4.3 8.1-4.3m0-3c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5.6 0 1.1-.2 1.6-.5 1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg>\r\n                <svg aria-label=\"Bình luận\" className=\"mr-1r\" fill=\"#262626\" height=\"24\" viewBox=\"0 0 48 48\" width=\"24\"><path clipRule=\"evenodd\" d=\"M47.5 46.1l-2.8-11c1.8-3.3 2.8-7.1 2.8-11.1C47.5 11 37 .5 24 .5S.5 11 .5 24 11 47.5 24 47.5c4 0 7.8-1 11.1-2.8l11 2.8c.8.2 1.6-.6 1.4-1.4zm-3-22.1c0 4-1 7-2.6 10-.2.4-.3.9-.2 1.4l2.1 8.4-8.3-2.1c-.5-.1-1-.1-1.4.2-1.8 1-5.2 2.6-10 2.6-11.4 0-20.6-9.2-20.6-20.5S12.7 3.5 24 3.5 44.5 12.7 44.5 24z\" fillRule=\"evenodd\"></path></svg>\r\n                <svg aria-label=\"Chia sẻ bài viết\" className=\"mr-1r\" fill=\"#262626\" height=\"24\" viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M47.8 3.8c-.3-.5-.8-.8-1.3-.8h-45C.9 3.1.3 3.5.1 4S0 5.2.4 5.7l15.9 15.6 5.5 22.6c.1.6.6 1 1.2 1.1h.2c.5 0 1-.3 1.3-.7l23.2-39c.4-.4.4-1 .1-1.5zM5.2 6.1h35.5L18 18.7 5.2 6.1zm18.7 33.6l-4.4-18.4L42.4 8.6 23.9 39.7z\"></path></svg>\r\n            </div>\r\n            <div className=\"post-caption\">{caption}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB_A6-PJMxkdZPP6nZD5pWwmMNBr0upE_w\",\r\n  authDomain: \"instagram-48891.firebaseapp.com\",\r\n  databaseURL: \"https://instagram-48891.firebaseio.com\",\r\n  projectId: \"instagram-48891\",\r\n  storageBucket: \"instagram-48891.appspot.com\",\r\n  messagingSenderId: \"294065804481\",\r\n  appId: \"1:294065804481:web:05905c0796ca48e49b7040\",\r\n  measurementId: \"G-BDV0J4V1ZJ\"\r\n  });\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {db, auth, storage};","import React from 'react';\r\n\r\nfunction Modal({ open, onClick }) {\r\n\r\n    const signUp = (event) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex h-100\">\r\n            <div className={open ? \"modal shadow show\" : \"modal shadow\"}>\r\n                <div className=\"modal-title\">\r\n                    Login\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <input type=\"text\" className=\"form-control mb-1r\" placeholder=\"Username\"/>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\"/>\r\n                </div>\r\n                <div className=\"modal-footer text-right\">\r\n                    <button className=\"btn btn-primary\" onClick={() => onClick(false)}>Cancel</button>\r\n                    <button className=\"btn btn-primary\" onClick={() => signUp()}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Modal","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Post from './post';\r\nimport { db } from './firebase';\r\nimport Modal from './modal';\r\n\r\nfunction App() {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    db.collection('posts').onSnapshot(snapshot => {\r\n      setPosts(snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        post: doc.data()\r\n      })));\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__header\">\r\n        <div className=\"container\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"flex-grow-1\">\r\n              <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" className=\"app__headerImage\" alt=\"logo\" />\r\n            </div>\r\n            <div className=\"control\">\r\n              <button className=\"btn\">\r\n                <svg aria-label=\"Home\" className=\"mr-1r\" fill=\"#262626\" height=\"22\" viewBox=\"0 0 48 48\" width=\"22\"><path d=\"M45.3 48H30c-.8 0-1.5-.7-1.5-1.5V34.2c0-2.6-2-4.6-4.6-4.6s-4.6 2-4.6 4.6v12.3c0 .8-.7 1.5-1.5 1.5H2.5c-.8 0-1.5-.7-1.5-1.5V23c0-.4.2-.8.4-1.1L22.9.4c.6-.6 1.5-.6 2.1 0l21.5 21.5c.4.4.6 1.1.3 1.6 0 .1-.1.1-.1.2v22.8c.1.8-.6 1.5-1.4 1.5zm-13.8-3h12.3V23.4L24 3.6l-20 20V45h12.3V34.2c0-4.3 3.3-7.6 7.6-7.6s7.6 3.3 7.6 7.6V45z\"></path></svg>\r\n              </button>\r\n              <button className=\"btn\" onClick={() => setOpen(true)}>\r\n              <svg aria-label=\"Trang cá nhân\" className=\"\" fill=\"#262626\" height=\"22\" viewBox=\"0 0 32 32\" width=\"22\"><path d=\"M16 0C7.2 0 0 7.1 0 16c0 4.8 2.1 9.1 5.5 12l.3.3C8.5 30.6 12.1 32 16 32s7.5-1.4 10.2-3.7l.3-.3c3.4-3 5.5-7.2 5.5-12 0-8.9-7.2-16-16-16zm0 29c-2.8 0-5.3-.9-7.5-2.4.5-.9.9-1.3 1.4-1.8.7-.5 1.5-.8 2.4-.8h7.2c.9 0 1.7.3 2.4.8.5.4.9.8 1.4 1.8-2 1.5-4.5 2.4-7.3 2.4zm9.7-4.4c-.5-.9-1.1-1.5-1.9-2.1-1.2-.9-2.7-1.4-4.2-1.4h-7.2c-1.5 0-3 .5-4.2 1.4-.8.6-1.4 1.2-1.9 2.1C4.2 22.3 3 19.3 3 16 3 8.8 8.8 3 16 3s13 5.8 13 13c0 3.3-1.2 6.3-3.3 8.6zM16 5.7c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 11c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z\"></path></svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container d-flex h-100\">\r\n        <div className=\"col-8\">\r\n        {\r\n          posts.map(({ id, post }) => (\r\n            <Post key={id} user={post.user} image={post.image} caption={post.caption}/>\r\n          ))\r\n        }\r\n        </div>\r\n      </div>\r\n      <Modal open={open} onClick={setOpen}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}